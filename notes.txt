
.>!!protect each mutex lock/unlock/create ... triple check
.>trace each error_exit back to main with return(1)
    "init_symposium, start_symposium.. EVERYWHERE"
    ->>
if (pthread_mutex_lock(&mutex) != 0)
    return (error_exit("Mutex lock failed", symposium));


add ft_usleep
usleep in main loop?
usleep has a limit - so limit input for time_to_eat/sleep

improve logic .. currently who takes the next fork? where is the cutoff when philos NEED to die??
do thinking only when uneven number of philos?


.>protect for ulimit -v 