??custom usleep??--nina-- while loop checking if duration is lower than time before entering loop
??protect each mutex lock/unlock ... triple check

usleep in main loop?
usleep has a limit - so limit input for time_to_eat/sleep

improve logic .. currently who takes the next fork? where is the cutoff when philos NEED to die??
do thinking only when uneven number of philos?

.>put join threads in clean_up?

.>EXIT not  -> do thread in main which detects exit_mtx_flag does clean_up
->establish exit struct & exit thread -> uses finished_symposium to detect finish
->exit just for failures .. separate flag (exit flag /similat to finished_symposium)

..>what happens when clean_up when mutex is locked??


.>protect for ulimit -v 